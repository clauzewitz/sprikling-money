#Use root/example as user/password credentials
version: '3.1'

networks:
  mongo-bridge:
    name: mongo-bridge

services:

  mongo1:
    image: mongo:4.0.20
    hostname: mongo1
    networks:
      - mongo-bridge
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pa22word@!
    ports:
      - '27017:27017'
    command: [--auth, --replSet, mongo-rp, --bind_ip_all, --keyFile, /docker-mongo/ssl_key]
    volumes:
      - ./keyfile/ssl_key:/docker-mongo/ssl_key:ro
    depends_on:
      - mongo2
      - mongo3

  mongo2:
    image: mongo:4.0.20
    hostname: mongo2
    networks:
      - mongo-bridge
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pa22word@!
    ports:
      - '27018:27017'
    command: [--auth, --replSet, mongo-rp, --bind_ip_all, --keyFile, /docker-mongo/ssl_key]
    volumes:
      - ./keyfile/ssl_key:/docker-mongo/ssl_key:ro
    depends_on:
      - mongo3

  mongo3:
    image: mongo:4.0.20
    hostname: mongo3
    networks:
      - mongo-bridge
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pa22word@!
    ports:
      - '27019:27017'
    command: [--auth, --replSet, mongo-rp, --bind_ip_all, --keyFile, /docker-mongo/ssl_key]
    volumes:
      - ./keyfile/ssl_key:/docker-mongo/ssl_key:ro

  mongosetup:
    build: ./mongosetup
    networks:
      - mongo-bridge
    volumes:
      - ./keyfile/ssl_key:/docker-mongo/ssl_key:ro
    depends_on:
      - mongo1
      - mongo2
      - mongo3

  mongo-express:
    image: mongo-express
    networks:
      - mongo-bridge
    restart: always
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: 'mongo1,mongo2'
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: pa22word@!
    depends_on:
      - mongosetup
      - mongo1
      - mongo2
      - mongo3

  redis:
    image: redis:6.0.9
    restart: always
    ports:
      - '6379:6379'

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    ports:
      - '8082:8081'
    environment:
      - REDIS_HOSTS=local:redis:6379